<!DOCTYPE HTML>
<html>
	<head>
		<title>Home Automation</title>
		<script src="jquery-3.2.1.js"></script>
	</head>

	<body onload ="init()">

		Remote Light Switch<br>

		<button id="button1"
				type="button"
				onclick="return lightSwitchClick(this)"
				style="background-color:black">
			???
		</button>

		<br><br><br>

		<button id="reload"
				type="button"
				onclick="return actualizeStates()"
				style="background-color:gray">
			reload
		</button>

        <br><br><br>

        <button id="dummyButton"
                type="button"
                onclick="return dummyOnClick()"
                style="background-color:gray">
            dummyButton
        </button>

		<script type="text/javascript">   

			function init() {
                actualizeStates();
			}

			function actualizeStates() {
				getLightState(button1);
				//there are more to come
			}

			function getLightState(button) {
				$.get('/arduino/msg/state/', function (data, status) { setLightState(data, button); });
			}

			function lightSwitchClick(button) {
				if (button.innerText == "off") {
					$.get('/arduino/msg/on/', function (data, status) { setLightState(data, button); });
				} else {
					$.get('/arduino/msg/off/', function (data, status) { setLightState(data, button); });
				}
				return false;
			}

			function setLightState(data, button) {
				if (data == "on") {
					button.style.backgroundColor = "yellow";
					button.innerText = "on";
				}
				else {
					button.style.backgroundColor = "gray";
					button.innerText = "off";
				}
            }


            var n = 0;

            function dummyOnClick() {
                $.get('/arduino/msg/dummy/', function (data, status) { dummyCallBack(); });
            }

            function dummyCallBack() {
                dummyButton.innerText = "" + n;
                n = n + 1;
                dummyOnClick();
            }

            //var socket = new WebSocket('/arduino/msg/ws/');
            
            //// callback-Funktion wird gerufen, wenn die Verbindung erfolgreich aufgebaut werden konnte
            //socket.onopen = function () {
            //    console.log("Verbindung wurde erfolgreich aufgebaut");

            //    alert('start');
            //};

            //// callback-Funktion wird gerufen, wenn eine neue Websocket-Nachricht eintrifft
            //socket.onmessage = function (messageEvent) {
            //    console.log(messageEvent.data);
            //};

            //// callback-Funktion wird gerufen, wenn ein Fehler auftritt
            //socket.onerror = function (errorEvent) {
            //    console.log("Error! Die Verbindung wurde unerwartet geschlossen");
            //};

            //socket.onclose = function (closeEvent) {
            //    console.log('Die Verbindung wurde geschlossen --- Code: ' + closeEvent.code + ' --- Grund: ' + closeEvent.reason);
            //};
			
		</script>
	</body>
</html>